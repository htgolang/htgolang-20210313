/*
0           1
1          1 1
2         1 2 1
3        1 3 3 1
4       1 4 6 4 1
5      1 5 10 10 5 1
6     1 6 15 20 15 6 1
7    1 7 21 35 35 21 7 1
8   1 8 28 56 70 56 28 8 1
9  1 9 36 84 126 126 84 36 9 1

打印杨辉三角形：
思路：
1、先确定每一行首数字和尾数字为 1
2、除了每一行首数字和尾数字的 1 之外，每一个数字，都为上一行前一位和后一位数字之和
3、每一行数字前面的空格数 = 杨辉三角形的行数 - 每一行数字的个数
4、使用切片来实现杨辉三角形的打印，切片类型为 [][]int，这个切片的元素为 []int
*/

package main

import "fmt"

func main() {
	//	定义杨慧三角形的行数
	rows := 10

	var s [10][10]int

	for i := 0; i < rows; i++ {
		s[i][0] = 1
		s[i][i] = 1
	}

	for i := 2; i < rows; i++ {
		for j := 1; j < i; j++ {
			s[i][j] = s[i-1][j-1] + s[i-1][j]
		}
	}

	for i := 0; i < rows; i++ {
		//for t := rows - len(s[i]); t > 0; t-- {
		for t := rows - (i + 1); t > 0; t-- {
			fmt.Print(" ")
		}

		for j := 0; j <= i; j++ {
			fmt.Print(s[i][j], " ")
		}

		fmt.Println()
	}
}
