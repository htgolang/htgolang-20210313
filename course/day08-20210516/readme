1. 复习
    a. 接口
        定义接口
        定义接口变量，赋值
        匿名接口
        空接口
        接口嵌入

    b. 反射
        i. 使用（底层）反射开发的技术
            json使用 属性标签 tag
            json库

            go类型 <=> 其他类型
        ii. 使用反射开发功能
            GO反射如何使用 reflect.Type, reflect.Value
            6 种功能

2. 作业
3. 新内容
    并发编程
        顺序编程: 计算机在执行代码逻辑上有先后顺序（可以预期下一行执行的代码）, 执行代码只有一个CPU（可以简单理解）
        并发编程: 并行(特殊的并发)   worker A s1 -> s2 -> s3 CPU 1
                                    worker B g1 -> g2 -> g3 CPU 2
                  并发 worker A/worker B -> CPU => 现象: worker A  worker B同时在执行
                        可以同时发起多个任务执行
        OS: 进程/线程
            进程: web.go => 编译 => web.exe/web(不是进程) => 被操作系统启动后 => 在操作系统种有一个进程: ps
                  资源: 内存, IO(文件ID) => 以进程为单位，进程时资源分配的最小单位
            线程: 执行的逻辑(主线程) => 执行调度的是线程 => 线程是CPU调度的最小单元
        应用程序:
            协程: 用户态的线程
                    第三方库 python2.7 => gevent, greentleet
                    go 在语言层面就提供了协程 => goroutine
                    GMP模型
                        G => 例程, goroutine
                        M => 执行代码的线程(CPU)
                        P => Processer 调度, 上下文的切换, 内存申请

                        P连接G和M(GO中的调度器)

                        runtime
        例程:
            go 函数调用
            goroutine执行切换:
                IO等待
                到达执行时间(最大执行时间)
                内核切换
                主动让出(sleep)
                ...

        再某个例程里面代码执行顺序依然按照逻辑关系按顺序执行

        并发：
            goroutine => 通信
            并发通信
                内存: 变量
    socket